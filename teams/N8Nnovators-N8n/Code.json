{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "fatimaahijazii23@gmail.com",
          "cachedResultName": "fatimaahijazii23@gmail.com"
        },
        "options": {
          "timeMin": "={{$fromAI(\"date\",\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\")}}",
          "fields": "=items(summary, start(dateTime))"
        }
      },
      "id": "fac7baf4-979a-4afd-b413-c1d41135e9a3",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        1456,
        544
      ],
      "typeVersion": 1.1,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Q9z7E7cZavGy5HCI",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Listen for incoming events').first().json.message.from.id }}"
      },
      "id": "bca9dcc9-b114-4890-ac0e-d0a431e76fe4",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1216,
        544
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "getAll",
        "filters": {
          "labelIds": [
            "INBOX",
            "UNREAD"
          ],
          "readStatus": "unread",
          "receivedAfter": "={{$fromAI(\"date\",\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\")}}"
        }
      },
      "id": "d98edaa1-5b30-4fa3-8c44-847f8a820ea0",
      "name": "Get Email",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1328,
        544
      ],
      "typeVersion": 2.1,
      "webhookId": "da95e437-d874-4530-b4cc-bf30269c650b",
      "credentials": {
        "gmailOAuth2": {
          "id": "k0k2jvZvd353bnXY",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c8952be0-bfa7-4cac-b097-83ad8b25fe86",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1088,
        544
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "NOQGCurxJOqVCppY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "98cd5303-010d-49e8-8a25-23b292c868ce",
      "name": "Listen for incoming events",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        288,
        224
      ],
      "webhookId": "322dce18-f93e-4f86-b9b1-3305519b7834",
      "typeVersion": 1,
      "credentials": {
        "telegramApi": {
          "id": "iI0hO4oSjJq5lJlv",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "text",
              "stringValue": "={{ $json?.message?.text || \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "07638997-0d18-48a3-8a74-abd48fd0890e",
      "name": "Voice or Text",
      "type": "n8n-nodes-base.set",
      "position": [
        496,
        224
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a0bf9719-4272-46f6-ab3b-eda6f7b44fd8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.message.text }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "dcf9290c-6183-4ed1-9432-0c075f310370",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        656,
        224
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/bot={{$credentials.telegramApi.apiKey}}/getFile?file_id={{ $json.message.voice.file_id }}",
        "method": "GET",
        "responseFormat": "json"
      },
      "id": "getFilePathNode",
      "name": "Get File Path",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        800,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://api.telegram.org/file/bot={{$credentials.telegramApi.apiKey}}/{{ $json.result.file_path }}",
        "method": "GET",
        "responseFormat": "file",
        "binaryPropertyName": "data"
      },
      "id": "downloadAudioFileNode",
      "name": "Download Audio File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        960,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "e8f4f0ee-7a89-48a9-b7f2-55372d97eb68",
      "name": "Speech to Text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        1120,
        224
      ],
      "typeVersion": 1.3,
      "credentials": {
        "openAiApi": {
          "id": "NOQGCurxJOqVCppY",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=You are a helpful assistant.\n\nToday's date is {{ $now }}.\n\nGuidelines:\n- When fetching emails, filter out any promotional emails. \n- When summarizing emails, include Sender, Message date, subject, and brief summary of email.\n- if the user did not specify a date in the request assume they are asking for today\n- When answering questions about calendar events, filter out events that don't apply to the question.  For example, the question is about events for today, only reply with events for today. Don't mention future events if it's more than 1 week away"
        }
      },
      "id": "e9da3237-0dbf-4c76-af3b-6f43e03ffca5",
      "name": "Fatima, AI Assistant üë©üèª‚Äçüè´",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1232,
        224
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for incoming events').first().json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "id": "d9ed4d8d-197f-48ea-8be6-c73eaa9aeba6",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1728,
        224
      ],
      "typeVersion": 1.1,
      "webhookId": "8b030a52-84a2-475f-89d8-4af4b8b89435",
      "credentials": {
        "telegramApi": {
          "id": "iI0hO4oSjJq5lJlv",
          "name": "Telegram account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3787aa7b-cc55-4ac2-83e3-66234a6c8355",
      "name": "Set Transcription Language",
      "type": "n8n-nodes-base.set",
      "position": [
        944,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Process Telegram Request\n",
        "height": 278.75,
        "width": 496.25,
        "color": 5
      },
      "id": "30f92556-c2b7-45f0-b052-05ad495487cb",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        128
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Get File Path",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File Path": {
      "main": [
        [
          {
            "node": "Download Audio File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio File": {
      "main": [
        [
          {
            "node": "Speech to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Email": {
      "ai_tool": [
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Voice or Text": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Transcription Language": {
      "main": [
        [
          {
            "node": "Speech to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Speech to Text": {
      "main": [
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Fatima, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Listen for incoming events": {
      "main": [
        [
          {
            "node": "Voice or Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fatima, AI Assistant üë©üèª‚Äçüè´": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "07e59b37-0c6d-4601-987d-4761caa07378",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ef201dc32792d4d6898cc35124cd911ba4054acd162390b2e16b5d1b412499d9"
  },
  "id": "q3bE3hCkkipQ9Ptp",
  "tags": []
}